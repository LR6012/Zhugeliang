1.Vue中computed 和 methods有什么区别？ 
我们可以使用 methods 来替代 computed，效果上两个都是一样的，但是 computed 是基于它的依赖缓存，只有相关依赖发生改变时才会重新取值。而使用 methods ，在重新渲染的时候，函数总会重新调用执行。

2.vue组件中data和实例中data区别 
每个组件在view层使用都会回调data，每次都返回一个新的{}对象，组件之间不会有关联

3.什么是双向数据绑定？
 
4.解释MVVM架构模式

MVVM最早由微软提出来，它借鉴了桌面应用程序的MVC思想，在前端页面中，把Model用纯JavaScript对象表示，View负责显示，两者做到了最大限度的分离。
把Model和View关联起来的就是ViewModel。ViewModel负责把Model的数据同步到View显示出来，还负责把View的修改同步回Model。


https://www.liaoxuefeng.com/wiki/001434446689867b27157e896e74d51a89c25cc8b43bdb3000/001475449022563a6591e6373324d1abd93e0e3fa04397f000

https://juejin.im/post/5aa00229f265da239b40fc02

5.react在生命周期中的哪一步你应该发起 AJAX 请求?    
我们应当将AJAX 请求放到 componentDidMount 函数中执行，主要原因有下： 如果我们将 AJAX 请求放置在生命周期的其他函数中，我们并不能保证请求仅在组件挂载完毕后才会要求响应。如果我们的数据请求在组件挂载之前就完成，并且调用了setState函数将数据添加到组件状态中，对于未挂载的组件则会报错。而在 componentDidMount 函数中进行 AJAX 请求则能有效避免这个问题。

6.react调用 setState 之后发生了什么？
在代码中调用setState函数之后，React 会将传入的参数对象与组件当前的状态合并，然后触发所谓的调和过程（Reconciliation）。经过调和过程，React 会以相对高效的方式根据新的状态构建 React 元素树并且着手重新渲染整个UI界面。在 React 得到元素树之后，React 会自动计算出新的树与老树的节点差异，然后根据差异对界面进行最小化重渲染。在差异计算算法中，React 能够相对精确地知道哪些位置发生了改变以及应该如何改变，这就保证了按需更新，而不是全部重新渲染。

7. 写出vue生命周期的钩子函数
8.vue钩子函数created和mounted调用先后？有什么区别？
实例创建回调/实例或者组件被挂载时回调
组件中created不能获取组件中dom,可以后去this，不能获取dom ;     
mounted可以
9. v-show和v-if指令的共同点和不同点？
  1.v-if是删除/添加Dom标签，不占据文档位置,v-show切换css的display属性，控制显示隐藏，还会占据文档位置。
  2.v-if会删除dom标签所以v-if性能消耗会高一些，需要频繁切换的话，使用v-show会好一点。
 
10. js 统计一个字符串出现频率最高的字母/数字，并输出出现次数
https://juejin.im/post/5a7aaf745188257a5a4c9a39



//方法五 利用空对象来记录新数组中已经存储过的元素
 2 var arr = [1,23,1,1,1,3,23,5,6,7,9,9,8,5];
 3 var o={};
 4 var new_arr=[];
 5 for(var i=0;i<arr.length;i++){
 6     var k=arr[i];
 7     if(!o[k]){
 8         o[k]=true;
 9         new_arr.push(k);
10     }
11 }
12 console.log(new_arr)

